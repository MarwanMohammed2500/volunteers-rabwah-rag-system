name: Docker Image CI

on:
  push:
    branches: "main"

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      application: ${{ steps.filter.outputs.application }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          application:
            - 'src/**'
            - 'Docker/Dockerfile'
            - 'Docker/docker-compose.prod.yml'
            - 'Docker/docker-compose.dev.yml'
            - 'requirements.txt'
            - '**.py'
            - '.env**'

  build-and-push:
    needs: check-changes
    if: needs.check-changes.outputs.application == 'true'
    runs-on: ubuntu-latest
    steps:
    # Step 1: Login to Dockerhub
    - name: Login to Dockerhub
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}
    # Step 2: Define commit SHA
    - name: Set short SHA
      run: echo "SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
    # Step 3: Checkout the code
    - name: Check out the code
      uses: actions/checkout@v4
    # Step 4: Build the images
    - name: Build the images
      run: docker compose -f Docker/docker-compose.dev.yml build --parallel
    # Step 5: Tag images
    - name: Tag images
      run: |
        # Tag the frontend image
        docker tag rabwah-frontend ${{vars.DOCKER_REPO}}:rabwah-frontend-latest
        docker tag rabwah-frontend ${{vars.DOCKER_REPO}}:rabwah-frontend-${{ env.SHA }}

        # Tag the Backend image
        docker tag rabwah-backend ${{vars.DOCKER_REPO}}:rabwah-backend-latest
        docker tag rabwah-backend ${{vars.DOCKER_REPO}}:rabwah-backend-${{ env.SHA }}
    # Step 6: Push to Dockerhub
    - name: Push the new images to Dockerhub
      run: |
        # Push the frontend image
        docker push ${{vars.DOCKER_REPO}}:rabwah-frontend-latest
        docker push ${{vars.DOCKER_REPO}}:rabwah-frontend-${{ env.SHA }}

        # Push the backend image
        docker push ${{vars.DOCKER_REPO}}:rabwah-backend-latest
        docker push ${{vars.DOCKER_REPO}}:rabwah-backend-${{ env.SHA }}
  
  pull-images-in-server:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    # Step 1: Checkout necessary files
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          Docker/docker-compose.prod.yml, redis.conf, .env.redis
        sparse-checkout-cone-mode: false
    
    # Copy necessary files into the server
    - name: Copy compose file to server
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "Docker/docker-compose.prod.yml, redis.conf"
        target: "~/"

    # SSH To server, pull images, run the containers, cleanup
    - name: SSH to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ~
          # Login to Dockerhub
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

          # Pull and run the images
          docker compose -f Docker/docker-compose.prod.yml up -d --pull always

          # Prune old images and containers
          docker image prune -af
          docker container prune -f

          # Cleanup
          rm -f docker-compose.prod.yml

          # Logout of Docker
          docker logout

          # Ensure everything is running
          docker ps -a