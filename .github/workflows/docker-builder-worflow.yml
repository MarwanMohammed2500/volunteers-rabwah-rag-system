name: Docker Image CI

on:
  push:
    branches: "main"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    # Step 1: Login to Dockerhub
    - name: Login to Dockerhub
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}
    # Step 2: Define commit SHA
    - name: Set short SHA
      run: echo "SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
    # Step 3: Retag the old frontend image
    - name: Retag images
      run: |
        docker pull ${{vars.DOCKER_REPO}}:frontend-latest
        docker tag ${{vars.DOCKER_REPO}}:frontend-latest ${{vars.DOCKER_REPO}}:frontend-${{ env.SHA }}
        docker pull ${{vars.DOCKER_REPO}}:backend-latest
        docker tag ${{vars.DOCKER_REPO}}:backend-latest ${{vars.DOCKER_REPO}}:backend-${{ env.SHA }}
        docker push ${{vars.DOCKER_REPO}}:frontend-${{ env.SHA }} && docker push ${{vars.DOCKER_REPO}}:backend-${{ env.SHA }}
    # Step 4: Build the images
    - name: Check out the code
      uses: actions/checkout@v4
    # Step 5: Build the images
    - name: Build the images
      run: docker compose -f Docker/docker-compose.dev.yml build
    # Step 6: Tag the image
    - name: Tag the Docker image
      run: docker tag docker-frontend ${{vars.DOCKER_REPO}}:frontend-latest && docker tag docker-backend ${{vars.DOCKER_REPO}}:backend-latest
    # Step 7: Push to Dockerhub
    - name: Push the new images to Dockerhub
      run: docker push ${{vars.DOCKER_REPO}}:frontend-latest && docker push ${{vars.DOCKER_REPO}}:backend-latest
  pull-images-in-server:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: SSH to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker compose pull
          docker compose up -d
          docker image prune -af
